{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","Interval","this","window","setInterval","setState","prevProps","clockName","props","console","debug","info","toUTCString","slice","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","leftClick","rightClick","contextmenu","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,SAAW,EALb,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GACbA,EAAUC,YAAcL,KAAKM,MAAMD,WAErCE,QAAQC,MAAR,uBAA8BJ,EAAUC,UAAxC,eAAwDL,KAAKM,MAAMD,YAIrEE,QAAQE,KAAKT,KAAKJ,MAAMC,KAAKa,cAAcC,OAAO,IAAK,MApB3D,kCAuBE,WACEC,cAAcZ,KAAKD,YAxBvB,oBA2BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKM,MAAMD,YAGb,YAED,sBAAMQ,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,KAAKa,cAAcC,OAAO,IAAK,YArCrD,GAA2BG,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWR,OAAO,GAE3C,MAAM,SAAN,OAAgBM,GAQX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAU,EACVhB,UAAW,WAHf,EAMEiB,QAAU,EANZ,EAsBEC,UAAY,WACV,EAAKpB,SAAS,CAAEkB,UAAU,KAvB9B,EA0BEG,WAAa,SAACC,GACZ,EAAKtB,SAAS,CAAEkB,UAAU,IAC1BI,EAAYC,kBA5BhB,uDAQE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,QAAS5B,KAAKuB,WACxCI,SAASC,iBAAiB,cAAe5B,KAAKwB,YAC9CxB,KAAKsB,QAAUrB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEE,UAAWW,QAC1B,QAbP,kCAgBE,WACEW,SAASE,oBAAoB,QAAS7B,KAAKuB,WAC3CI,SAASE,oBAAoB,cAAe7B,KAAKwB,YACjDZ,cAAcZ,KAAKsB,WAnBvB,oBA+BE,WACE,OAAOtB,KAAKJ,MAAMyB,SAEd,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,CAAOR,UAAWL,KAAKJ,MAAMS,cAG/B,qBAAKQ,UAAU,MAAf,yBAtCR,GAAyBC,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.5e5db7b5.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  Interval = 0;\n\n  componentDidMount() {\n    this.Interval = window.setInterval(() => {\n      this.setState({ time: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.time.toUTCString().slice(-12, -4));\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.Interval);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.leftClick);\n    document.addEventListener('contextmenu', this.rightClick);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.leftClick);\n    document.removeEventListener('contextmenu', this.rightClick);\n    clearInterval(this.timerId);\n  }\n\n  leftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  rightClick = (contextmenu: Event) => {\n    this.setState({ hasClock: false });\n    contextmenu.preventDefault();\n  };\n\n  render(): React.ReactNode {\n    return this.state.hasClock\n      ? (\n        <div className=\"App\">\n          <Clock clockName={this.state.clockName} />\n        </div>\n      ) : (\n        <div className=\"App\">\n          nothing\n        </div>\n      );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}